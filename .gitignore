### dotfiles
#
# --- Initialization:
#
#     git init --bare "$HOME/.dtf.git"
#
# --- Installation:
#
#     alias dtf='git --git-dir="$HOME/.dtf.git" --work-tree="$HOME"'
#     dtf checkout
#
#     We could have just initialized the repository directly in the home
#     folder, but the advantage of doing it with a bare repo and a work tree
#     is that normal uses of `git` won't try and use the home folder if you
#     aren't in a git repository.
#
# --- Usage:
#
#     You can use `git add/commit/status/push` as usual, just replace `git`
#     with `dtf`. Note that before using `add`, you need to list the file
#     below.
#
# --- How it works:
#
#     The following line prevents Git from scanning any folders any number of
#     levels underneath the repository work tree (home folder). Unlike if we
#     used a `*` only, this allows you to scan a folder without also including
#     including its contents by listing it with a `!` (see the next section).
#     If we used a single `*`, we would have needed to list each folder to scan
#     like `!.config` `.config/*` instead of just `!.config`.
# --- From the manual
#
#     A trailing "/**" matches everything inside. For example, "abc/**" matches all files inside
#     directory "abc", relative to the location of the .gitignore file, with infinite depth.
#
/*
#
#     The following line causes Git to track this file.
!/.gitignore
# --- bash
!/.bashrc.user
!/.config
!/.config/bash/**
# --- zsh (still not working as expected)
!/.zshrc.user
!/.config/zsh/
!/.config/zsh/**/*
# --- nvim (still not working as expected)
!/.config/nvim/
!/.config/nvim/**/*
# --- tmux
!/.config/tmux/**
# --- misc (either non-static or reproducible)
/.config/gh
/.config/lazygit/state.yml


.config/zsh/.zcompdump