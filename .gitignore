### dotfiles
#
# --- Initialization:
#
#     git init --bare "$HOME/.dtf.git"
#
# --- Installation:
#
#     alias dtf='git --git-dir="$HOME/.dtf.git" --work-tree="$HOME"'
#     dtf checkout
#
#     We could have just initialized the repository directly in the home
#     folder, but the advantage of doing it with a bare repo and a work tree
#     is that normal uses of `git` won't try and use the home folder if you
#     aren't in a git repository.
#
# --- Usage:
#
#     You can use `git add/commit/status/push` as usual, just replace `git`
#     with `dtf`. Note that before using `add`, you need to list the file
#     below.
#
# --- How it works:
#
#     The following line prevents Git from scanning any folders any number of
#     levels underneath the repository work tree (home folder). Unlike if we
#     used a `*` only, this allows you to scan a folder without also including
#     including its contents by listing it with a `!` (see the next section).
#     If we used a single `*`, we would have needed to list each folder to scan
#     like `!.config` `.config/*` instead of just `!.config`.
/**
#
#     The following line causes Git to track this file.
!/.gitignore
# --- general config
!/.config/
!/.config/*
!/.config/**
/.config/user*
# --- bash
!/.bashrc.user
!/.config/bash/*
!/.config/bash/**
# --- zsh
!/.zshrc.user
!/.config/zsh/**
/.config/zsh/.zcomp*
/.config/zsh/*.zwc
/.config/zsh/**/*.zwc
# --- nvim
!/.config/nvim/*
!/.config/nvim/**
!/.config/nvim/lua/*
!/.config/nvim/lua/**
/.config/nvim/plugin/packer_compiled.vim 

# --- misc (either non-static or reproducible)
/.config/Code
/.config/ccache
/.config/configstore
/.config/containers
/.config/fzf
/.config/gatsby
/.config/gconf
/.config/geany
/.config/gh
/.config/gopass
/.config/htop/htoprc
/.config/lazygit
/.config/libreoffice
/.config/lnav
/.config/mimeapps.list
/.config/modules
/.config/monitors.xml
/.config/nix/nix.conf
/.config/pulse
/.config/rhel
/.config/smug
/.config/rclone
