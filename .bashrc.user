#!/bin/bash

export XDG_CONFIG_HOME="$HOME/.config"
export XDG_CACHE_HOME="$HOME/.cache"
export XDG_DATA_HOME="$HOME/.local/share"
export BASHDOTDIR="$XDG_CONFIG_HOME/bash"

export HISTTIMEFORMAT="%h %d %H:%M:%S "
export HISTSIZE=100000
export HISTFILESIZE=2000000
export HISTFILE="$XDG_DATA_HOME/bash/history"
shopt -s histappend
export HISTIGNORE="ls:ps:history"
PROMPT_COMMAND='history -a'
export TERM
TERM=$(echo -n "$TERM" | sed 's/-256color//')
if [ "$TERM_PROGRAM" = 'vscode' ]; then
    export WHO_AM_I="vscode"
    SDK_ENV="/repo/ekhhaga/sdk/R40A125/environment-setup-armv7a-vfp-neon-wrs-linux-gnueabi"
    [ -f "$SDK_ENV" ] && source "$SDK_ENV"
    #export LD_LIBRARY_PATH=/repo/ekhhaga/sdk/R40A125/sysroots/x86_64-wrlinuxsdk-linux/usr/lib/arm-wrs-linux-gnueabi/gcc/arm-wrs-linux-gnueabi/5.2.0/:/repo/ekhhaga/sdk/R40A125/sysroots/x86_64-wrlinuxsdk-linux/usr/lib/arm-wrs-linux-gnueabi/gcc/arm-wrs-linux-gnueabi/5.2.0/../../../../../arm-wrs-linux-gnueabi/lib/arm-wrs-linux-gnueabi/5.2.0/:/repo/ekhhaga/sdk/R40A125/sysroots/x86_64-wrlinuxsdk-linux/usr/lib/arm-wrs-linux-gnueabi/gcc/arm-wrs-linux-gnueabi/5.2.0/../../../../../arm-wrs-linux-gnueabi/lib/:/repo/ekhhaga/sdk/R40A125/sysroots/armv7a-vfp-neon-wrs-linux-gnueabi/lib/arm-wrs-linux-gnueabi/5.2.0/:/repo/ekhhaga/sdk/R40A125/sysroots/armv7a-vfp-neon-wrs-linux-gnueabi/lib/:/repo/ekhhaga/sdk/R40A125/sysroots/armv7a-vfp-neon-wrs-linux-gnueabi/usr/lib/arm-wrs-linux-gnueabi/5.2.0/:/repo/ekhhaga/sdk/R40A125/sysroots/armv7a-vfp-neon-wrs-linux-gnueabi/usr/lib:$LD_LIBRARY_PATH
    export CLANGD_FLAGS='--sysroot=/repo/ekhhaga/sdk/R40A125/sysroots/armv7a-vfp-neon-wrs-linux-gnueabi' # seems useless
    export CPLUS_INCLUDE_PATH="$SDKTARGETSYSROOT/usr/include/c++/5.2.0":$CPLUS_INCLUDE_PATH
    unset PYTHONHOME
    unset PYTHONPATH
    alias gcc='$CC'
else
    [ -f "${BASHDOTDIR:-$HOME}/env" ] && source "${BASHDOTDIR:-$HOME}/env"
    [ -f "${BASHDOTDIR:-$HOME}/.bash_git" ] && source "${BASHDOTDIR:-$HOME}/.bash_git" 
    [ -f "${BASHDOTDIR:-$HOME}/.bash_aliases" ] && source "${BASHDOTDIR:-$HOME}/.bash_aliases"
    [ -f "${BASHDOTDIR:-$HOME}/.fzf.bash" ] && source "${BASHDOTDIR:-$HOME}/.fzf.bash"

    ## https://unix.stackexchange.com/questions/439254/use-my-already-running-ssh-agent-process ##
    export SSH_AUTH_SOCK=~/.ssh/ssh-agent.sock
#    ssh-add -l 2>/dev/null >/dev/null
#    [ $? -ge 2 ] && ssh-agent -a "$SSH_AUTH_SOCK" >/dev/null
    
    RunCondaInit()
    {
    	echo "eval \ "
    	echo "\$\(/home/ekhhaga/.local/miniconda3/bin/conda shell.bash hook\)"
   }
    
    #if echo $TERM | grep -q -- '-256color'; then
    #    echo -e '\n\n256-color mode not supported on this host.  Reverting TERM...\n'
    #    export TERM=`echo -n $TERM | sed 's/-256color//'`
    #fi
    
    # old $PS1=\u@\h[\A][${PWD#${PWD%/*/*/*}/}]\$
    PROMPT_DIRTRIM=1
    export PS1
    PS1="\[\033[38;5;11m\]\u\[$(tput sgr0)\]@\h:\[$(tput sgr0)\]\[\033[38;5;6m\][\w]\[$(tput sgr0)\]\[\033[38;5;199m\]\$(__git_ps1)\[$(tput sgr0)\]$ \[$(tput sgr0)\]"
    
    #export PYTHONIOENCODING=UTF-8
    #function _update_ps1() {
    #    PS1=$(powerline-shell $?)
    #}
    #
    #if [[ $TERM != linux && ! $PROMPT_COMMAND =~ _update_ps1 ]]; then
    #    PROMPT_COMMAND="_update_ps1; $PROMPT_COMMAND"
    #fi
    
    #eval "$(starship init bash)"
    #export STARSHIP_CONFIG=$HOME/.config/starship.toml
fi

#export NVM_DIR="$HOME/.config/nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
