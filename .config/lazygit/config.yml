gui:
  # stuff relating to the UI
  authorColors: {}
  commandLogSize: 8
  expandFocusedSidePanel: false
  language: auto
  mainPanelSplitMode: 'flexible' # one of 'horizontal' | 'flexible' | 'vertical'
  mouseEvents: true
  scrollHeight: 3 # how many lines you scroll by
  scrollPastBottom: true # enable scrolling past the bottom
  showCommandLog: true
  showFileTree: true # for rendering changes files in a tree format
  showListFooter: true
  showRandomTip: false
  sidePanelWidth: 0.3333 # number from 0 to 1
  skipNoStagedFilesWarning: false
  skipStashWarning: true
  skipUnstageLineWarning: true
  theme:
    lightTheme: false # For terminals with a light background
    activeBorderColor:
      - green
      - bold
    inactiveBorderColor:
      - white
    optionsTextColor:
      - blue
    selectedLineBgColor:
      - reverse
    selectedRangeBgColor:
      - blue
    cherryPickedCommitBgColor:
    - blue
    cherryPickedCommitFgColor:
    - cyan
  commitLength:
    show: true
git:
  paging:
    colorArg: always
    pager: ""
    useConfig: false
  merging:
    # only applicable to unix users
    manualCommit: false
    # extra args passed to `git merge`, e.g. --no-ff
    args: ''
  pull:
    mode: 'ff-only' # one of 'merge' | 'rebase' | 'ff-only'
  autoFetch: false 
  branchLogCmd: git log --graph --color=always --abbrev-commit --decorate --date=relative
    --pretty=medium {{branchName}} --
  allBranchesLogCmd: git log --graph --all --color=always --abbrev-commit --decorate
    --date=relative  --pretty=medium
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  commitPrefixes: {}
  disableForcePushing: false
  log:
    order: topo-order
    showGraph: when-maximised
update:
  method: prompt # can be: prompt | background | never
  days: 14 # how often an update is checked for
refresher:
  refreshInterval: 10 # file/submodule refresh interval in seconds
  fetchInterval: 60 # re-fetch interval in seconds
  commitPrefixes: {}
reporting: 'off' # one of: 'on' | 'off' | 'undetermined'
splashUpdatesIndex: 0
confirmOnQuit: false
quitOnTopLevelReturn: false
disableStartupPopups: false
services: {}
notARepository: 'skip' # one of: 'prompt' | 'create' | 'skip'
os:
  editCommandTemplate: '{{editor}} {{filename}}'
  openCommand:  xdg-open {{filename}} >/dev/null
  openLinkCommand: xdg-open {{link}} >/dev/null

keybinding:
  universal:
    quit: 'q'
    quit-alt1: '<c-q>'
    return: '<esc>' # return to previous menu, will quit if there's nowhere to return
    quitWithoutChangingDirectory: 'Q'
    togglePanel: '<tab>' # goto the next panel
    prevItem: '<up>' # go one line up
    nextItem: '<down>' # go one line down
    prevItem-alt: 'k' # go one line up
    nextItem-alt: 'j' # go one line down
    prevPage: ',' # go to next page in list
    nextPage: '.' # go to previous page in list
    gotoTop: 'g' # go to top of list
    gotoBottom: 'G' # go to bottom of list
    prevBlock: '<' # goto the previous block / panel
    nextBlock: '>' # goto the next block / panel
    nextMatch: 'n'
    prevMatch: 'N'
    optionMenu: 'x' # show help menu
    optionMenu-alt1: '?' # show help menu
    select: '<space>'
    goInto: '<enter>'
    confirm: '<enter>'
    confirm-alt1: 'y'
    remove: 'd'
    new: 'n'
    edit: 'e'
    openFile: 'o'
    scrollUpMain: '<pgup>' # main panel scroll up
    scrollDownMain: '<pgdown>' # main panel scroll down
    scrollUpMain-alt1: 'K' # main panel scroll up
    scrollDownMain-alt1: 'J' # main panel scroll down
    scrollUpMain-alt2: '<c-u>' # main panel scroll up
    scrollDownMain-alt2: '<c-d>' # main panel scroll down
    executeCustomCommand: ':'
    createRebaseOptionsMenu: 'm'
    pushFiles: 'P'
    pullFiles: 'p'
    refresh: 'R'
    createPatchOptionsMenu: '<c-p>'
    nextTab: ']'
    prevTab: '['
    nextScreenMode: '+'
    prevScreenMode: '_'
    undo: 'z'
    redo: '<c-z>'
    filteringMenu: '<c-s>'
    diffingMenu: 'W'
    diffingMenu-alt: '<c-e>' # deprecated
    copyToClipboard: '<c-o>'
    submitEditorText: '<enter>'
    appendNewline: '<tab>'
    prevBlock-alt: 'h'
    nextBlock-alt: 'l'
    nextBlock-alt2: '<tab>'
    prevBlock-alt2: '<backtab>'
    startSearch: '/'
    extrasMenu: '@'

  status:
    checkForUpdate: 'r'
    recentRepos: '<enter>'
    allBranchesLogGraph: 'a'

  files:
    commitChanges: 'c'
    commitChangesWithoutHook: 'w'
    amendLastCommit: 'A'
    commitChangesWithEditor: 'C'
    ignoreFile: 'i'
    refreshFiles: 'r'
    stashAllChanges: 's'
    viewStashOptions: 'S'
    toggleStagedAll: 'a' # stage/unstage all
    viewResetOptions: 'D'
    fetch: 'f'
    toggleTreeView: '`'
    openMergeTool: 'M'

  branches:
    createPullRequest: 'o'
    checkoutBranchByName: 'c'
    forceCheckoutBranch: 'F'
    rebaseBranch: 'r'
    mergeIntoCurrentBranch: 'M'
    viewGitFlowOptions: 'i'
    fastForward: 'f' # fast-forward this branch from its upstream
    pushTag: 'P'
    setUpstream: 'u' # set as upstream of checked-out branch
    fetchRemote: 'f'
    copyPullRequestURL: '<c-y>'
    renameBranch: 'R'

  commits:
    squashDown: 's'
    renameCommit: 'r'
    renameCommitWithEditor: 'R'
    viewResetOptions: 'g'
    markCommitAsFixup: 'f'
    createFixupCommit: 'F' # create fixup commit for this commit
    squashAboveCommits: 'S'
    moveDownCommit: '<c-j>' # move commit down one
    moveUpCommit: '<c-k>' # move commit up one
    amendToCommit: 'A'
    pickCommit: 'p' # pick commit (when mid-rebase)
    revertCommit: 't'
    cherryPickCopy: 'c'
    cherryPickCopyRange: 'C'
    pasteCommits: 'v'
    tagCommit: 'T'
    checkoutCommit: '<space>'
    resetCherryPick: '<c-r>'
    copyCommitMessageToClipboard: '<c-y>'

  stash:
    popStash: 'g'

  commitFiles:
    checkoutCommitFile: 'c'

  main:
    toggleDragSelect: 'v'
    toggleDragSelect-alt: 'V'
    toggleSelectHunk: 'a'
    pickBothHunks: 'b'

  submodules:
    init: 'i'
    update: 'u'
    bulkMenu: 'b'

customCommands:
  - key: 'U'
    command: "git smu" # maybe it's not necessary
    context: 'files'
    loadingText: 'Updating all submodules'
  - key: '<c-g>'
    command: "git reuse-msg"
    context: 'files'
    loadingText: 're-use last message'
  - key: '<c-r>'
    command: "git soft-reset"
    context: 'commits'
    loadingText: 'soft reset'
  - key: 'X'
    command: "git rebase --abort"
    context: 'commits'
    loadingText: 'rebase --abort'
