#!/usr/bin/env zsh

opts=$(printf '%q ' "${args[@]}")

[[ -z $height ]] && height=${TMUX_POPUP_HEIGHT:-80%}
[[ -z $width ]] && width=${TMUX_POPUP_WIDTH:-80%}

envs="SHELL=$SHELL"
id=$RANDOM
cmd_file="${TMPDIR:-/tmp}/lf-cmd-file-$id"
clean_cmd="command rm -f $cmd_file $pstdin $pstdout"

cleanup() {
  eval "$clean_cmd"
}

trap 'cleanup' EXIT

zlf() {
  # set -x
  emulate -L zsh
  local d=$(mktemp -d) || return 1
  {
    mkfifo -m 600 $d/fifo || return 1

    # tmux popup -d '#{pane_current_path}' \
      # -xC -yC -w$width -h$height \
      # "echo {ZLE_FIFO}>$d/fifo; export ZLE_FIFO; exec lf" || return 1
      # -E "$envs bash $cmd_file" || return 1

    tmux split -bf \
      "echo {ZLE_FIFO}>$d/fifo; export ZLE_FIFO; exec lf" || return 1

    local fd
    exec {fd}<$d/fifo
    zle -Fw $fd _zlf_handler
  } always {
    rm -rf $d
  }
}


zlf_handler() {
  emulate -L zsh
  local line
  if ! read -r line <&$1; then
    zle -F $1
    exec {1} <&-
    return 1
  fi
  eval $line
  zle -R
}

zle -N zlf
zle -N zlf_handler

bindkey '^e' zlf
