{
  "npm.binPath": "$NVM_DIR/versions/node/v15.1.0/bin/npm",
  "sh.enable": true,
  "json.format.enable": true,
  "coc.preferences.formatOnSaveFiletypes": ["sh", "json"],
  "diagnostic-languageserver.linters": {
    "shellcheck": {
      "command": "shellcheck",
      "debounce": 100,
      "args": ["-e", "SC1090", "--format", "json", "-"],
      "sourceName": "shellcheck",
      "parseJson": {
        "line": "line",
        "column": "column",
        "endLine": "endLine",
        "endColumn": "endColumn",
        "message": "${message} [${code}]",
        "security": "level"
      },
      "securities": {
        "error": "error",
        "warning": "warning",
        "info": "info",
        "style": "hint"
      }
    }
  },
  "diagnostic-languageserver.filetypes": {
    // lint `sh` (includes `bash`) files
    "sh": "shellcheck"
  },
  "diagnostic-languageserver.formatFiletypes": {
    // format `sh` (includes `bash`) files using formatter defined below
    "sh": "shfmt"
  },
  "diagnostic-languageserver.formatters": {
    // define our formatter so that we can reference it from
    // `diagnostic-languageserver.formatFiletypes`
    "shfmt": {
      "command": "shfmt",
      // all the below args are entirely optional
      // primarily listed here to call out that flags which take an
      // argument (such as `-i <num-spaces>` for specifying indentation)
      // should be split into two strings, the flag and then the value
      "args": ["-i", "2", "-bn", "-ci", "-sr"]
    }
  },
  "languageserver": {
    "ccls": {
      "command": "ccls",
      "filetypes": ["c", "cpp", "objc", "objcpp"],
      "rootPatterns": [
        ".ccls",
        "compile_commands.json",
        ".vim/",
        ".git/",
        ".hg/"
      ],
      "initializationOptions": {
        "cache": {
          "directory": ".ccls-cache"
        },
        "index": {
          "initialBlacklist": [
            ".git",
            ".clangd",
            ".vscode",
            "external",
            "test",
            "build"
          ]
        },
        "highlight": { "lsRanges": true }
      }
    }
  }
}
