set shell bash
set shellopts '-eu'

set hidden true
set icons true
set ignorecase true
set info size:time
set period 1
set preview true
set previewer ~/.config/lf/batlf.sh
set ratios 1:1:3
set scrolloff 10

cmd open ${{
    case $(file --mime-type $f -b) in
        text/*) $EDITOR $fx;;
        *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
    esac
}}

cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -i -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-basename $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard

cmd yank-basename-without-extension ${{
    echo "$fx" |
      xargs -r -d '\n' basename -a |
      awk -e '{
        for (i=length($0); i > 0; i--) {
          if (substr($0, i, 1) == ".") {
            if (i == 1) print $0
            else print substr($0, 0, i-1)

            break
          }
        }

        if (i == 0)
          print $0
      }' |
      if [ -n "$fs" ]; then cat; else tr -d '\n'; fi |
      xclip -i -selection clipboard
}}

cmd trash ${{
    set -f
    if gio trash 2>/dev/null; then
        gio trash $fx
    else
        mkdir -p ~/.trash
        mv -- $fx ~/.trash
    fi
}}

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}

cmd change_ratio ${{
    set ratios 1:3:2
}}

cmd reset_ratio ${{
    set ratios 1:2
}}

cmd reset_preview ${{
    set preview!
}}

cmd reset_order ${{
    set reverse!
}}

cmd bulkrename $vidir

cmd fzf_jump ${{
    res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
    if [ -f "$res" ]; then
      cmd="select"
    elif [ -d "$res" ]; then
      cmd="cd"                                                       
    fi
    lf -remote "send $id $cmd \"$res\""
}}

map <c-f> :fzf_jump

map <c-t> $lf -remote "send $id select '$(fzf)'"

# execute current file (must be executable)
map x $$f
map X !$f

# dedicated keys for file opener actions
map o &mimeopen $f
map O $mimeopen --ask $f

map <c-y> yank-path
map V push :!nvim<space>

# File Openers
map ee $$EDITOR "$f"
map u $view "$f"

# Basic Functions
map <c-q> quit
map <c-r> reload
map <enter> open
map C clear
map F2 rename
map H top
map L bottom
map U unselect
map br $vimv $fx
map o open_config
map r push :rename<space>

# UI utils
map tR change_ratio
map tr reset_ratio
map sr reset_order
map sP reset_preview
# map i $mimeopen $f | bat

# Semi Bookmarks
map gr cd /repo/ekhhaga
map gc cd ~/.config
map gs cd ~/.scripts
map gl cd ~/local

map B bulkrename
