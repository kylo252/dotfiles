set shell bash
set shellopts '-eu'

set hidden true
set icons true
set ignorecase true
set info size:time
set period 1
set preview true
set previewer ~/.config/lf/preview
set ratios 1:1:3
set scrolloff 10

# emulating local-leader by appending '.'

# Basic Functions
map <c-q> quit
map <c-r> reload
map <enter> open
map C clear
map H top
map L bottom
map U unselect
map br $vimv $fx
map r push :rename<space>
map i $bat --pager='less -Rf' ---color=always --number --wrap auto --paging=always "$f" 
map .e $$EDITOR "$f"

# create dir/file
map ad push $mkdir<space>
map af push $touch<space>

cmd mkdir %[ -n "${1}" ] && mkdir -p ${@} || echo "Argument needed"
cmd mkfile %[ -n "${1}" ] && touch ${@} || echo "Argument needed"

# Tmux
map tv &tmux split-window -h lf
map tb &tmux split-window -v lf

# show documentation
map g? $lf -doc | less

# check the terminal width on startup and set number of columns accordingly
%{{
  w=$(tput cols)
  if [ $w -le 80 ]; then
    lf -remote "send $id set ratios 1:2"
  elif [ $w -le 160 ]; then
    lf -remote "send $id set ratios 1:2:3"
  else
    lf -remote "send $id set ratios 1:2:3:5"
  fi
}}

cmd open ${{
  case $(file --mime-type $f -b) in
    text/*) $EDITOR $fx;;
    *) for f in $fx; do setsid $OPENER $f > /dev/null 2> /dev/null & done;;
  esac
}}

map d cut 
map y copy
map p paste

cmd yank-dirname $dirname -- "$f" | head -c-1 | xclip -i -selection clipboard
cmd yank-path $printf '%s' "$fx" | xclip -i -selection clipboard
cmd yank-basename $basename -a -- $fx | head -c-1 | xclip -i -selection clipboard

map <c-y> yank-path
map .yd yank-dirname
map .yf yank-basename

# make sure trash folder exists
%mkdir -p ~/.trash

cmd trash ${{
  set -f
  if gio trash 2>/dev/null; then
		gio trash $fx
  else
		mkdir -p ~/.trash
		mv -- $fx ~/.trash
  fi
}}

# define a custom 'delete' command
cmd delete ${{
  set -f
  printf "$fx\n"
  printf "delete?[y/n]"
  read ans
  [ $ans = "y" ] && rm -rf $fx
}}

map Dt trash
map DT delete

cmd bulkrename ${{
/bin/sh -c "vimv $(echo -e "$fx" | xargs -i echo "\\'{}\\'" | xargs echo)"
}}
map .br bulkrename

# fzf integration
cmd fzf_jump ${{
  res="$(find . -maxdepth 1 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"                                                       
  fi
  lf -remote "send $id $cmd \"$res\""
}}
map <c-f> :fzf_jump
map <c-t> $lf -remote "send $id select '$(fzf)'"

cmd nvr_send ${{
  # nvr --serverlist | xargs -i nvr --servername {} "$fx"
  VMUX_NOT_SELECT_PANE=1 vmux "$fx"
  quit
}}

map E nvr_send
map .vb push :!nvim<space>

# Semi Bookmarks
map gr cd /repo/ekhhaga
map gc cd ~/.config
map gs cd ~/.scripts
map gd cd ~/.local/share
map gl cd ~/local

